using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfftw3"], :libfftw3),
    LibraryProduct(prefix, ["libfftw3f"], :libfftw3f),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaMath/FFTWBuilder/releases/download/v3.3.9-alpha1+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FFTW.v3.3.9-alpha1.aarch64-linux-gnu.tar.gz", "f1eb8ad7889fe370c4201a66d47b2e0615550e507fae7681416ce2aea5345918"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FFTW.v3.3.9-alpha1.aarch64-linux-musl.tar.gz", "60422edf3c0b7800f8b46dbd91a23296bce0f406351a0430ab94cbc2b89f500c"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FFTW.v3.3.9-alpha1.arm-linux-gnueabihf.tar.gz", "28baca9720095a5ba21941e4bd1f9426b9a59fc074a9b64f18e1a6199a0944ee"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FFTW.v3.3.9-alpha1.arm-linux-musleabihf.tar.gz", "70cb66a82f92427f5397d2dddcef251696d80b90ac1e00b68bd8429101f00fd0"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FFTW.v3.3.9-alpha1.i686-linux-gnu.tar.gz", "78c8144081ea5ce1bb954bf5ae8c3821eaf61910798205e700773219770d7648"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FFTW.v3.3.9-alpha1.i686-linux-musl.tar.gz", "f2c9a0234a046411532f99c8ef0d2f3bcf7e2f8b42b540aaade060a5771eb06d"),
    Windows(:i686) => ("$bin_prefix/FFTW.v3.3.9-alpha1.i686-w64-mingw32.tar.gz", "522dfeec872b9cbab99b34f83591be58e4a705910a20631e3c28137776342f51"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FFTW.v3.3.9-alpha1.powerpc64le-linux-gnu.tar.gz", "5c221b796fc26e34d846ae6b380b2d506bd1f179b9e95542fb132300d2f734ee"),
    MacOS(:x86_64) => ("$bin_prefix/FFTW.v3.3.9-alpha1.x86_64-apple-darwin14.tar.gz", "3b3d886bba184a069bd4c8ff80c9b05baa70c72e66c7f144270b58c3488d504b"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FFTW.v3.3.9-alpha1.x86_64-linux-gnu.tar.gz", "5852eb0cfe0a2eee9ae92806dfc414d73a2c2015ad551d76f764787c34b56e26"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FFTW.v3.3.9-alpha1.x86_64-linux-musl.tar.gz", "57d5f470e2865c6ae61243b0b914572bb623d9961ccbc1fd448aeca0bbddaca0"),
    FreeBSD(:x86_64) => ("$bin_prefix/FFTW.v3.3.9-alpha1.x86_64-unknown-freebsd11.1.tar.gz", "5be6e6207ba377ae818143e1e2789f83085725e4536e67ce6852762143c2a138"),
    Windows(:x86_64) => ("$bin_prefix/FFTW.v3.3.9-alpha1.x86_64-w64-mingw32.tar.gz", "1d8657df9f42eae29e89434630fe8792cf07c88d69c6f32fb2fa464f08c779da"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
